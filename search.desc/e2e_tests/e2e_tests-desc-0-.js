searchState.loadedDescShard("e2e_tests", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDirectory containing the test configuration and test …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPath to the meroctl binary.\nPath to the merod binary.\nDirectory to write the test results, logs and node data.\nFormat of the E2E test output.\nProtocols to run\nThe directories that contains the test data to be combined.\nDirectory to write the combined test results.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDrop the binding, returning the bound address.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfiguration for Ethereum protocol sandbox environment …\nRepresents the Ethereum sandbox environment for testing …\nEthereum account address used for transactions\nAddress of the deployed Context Config contract\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize a new Ethereum sandbox environment\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate node configuration arguments for Ethereum protocol\nURL of the Ethereum RPC endpoint\nPrivate key for signing transactions\nVerify the state of an external contract by calling a …\nConfiguration for Internet Computer Protocol (ICP) sandbox …\nRepresents the ICP sandbox environment for testing Handles …\nPrincipal ID used for transactions\nCanister ID of the deployed Context Config contract\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize a new ICP sandbox environment\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerate node configuration arguments for ICP protocol\nPublic key for identity verification\nURL of the ICP network endpoint (e.g., local replica)\nPrivate key for signing transactions\nVerify the state of an external canister by calling a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSource location for an application that can be installed. …\nLocal file path to a WASM application\nRemote URL pointing to a WASM application, optionally gzip …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstalls the application from this source onto the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStep to retrieve and process proposals from a context, …\nJSON arguments to pass to the get proposals request\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExecutes the get proposals step by:\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRecursively processes a JSON value, replacing variable …\nStep to verify the state of an external contract by …\nArguments to pass to the method call\nID or address of the contract to verify\nOptional description of what this verification step is …\nExpected value that should be contained in the method’s …\nReturns the argument unchanged.\nMilliseconds to wait between retries Defaults to 1000ms if …\nCalls <code>U::from(self)</code>.\nName of the method to call on the contract\nNumber of times to retry the verification if it fails …\nExecutes the verification step by calling the specified …\nWait the minimum amount of time for consensus to be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")