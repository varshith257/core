(function() {
    var type_impls = Object.fromEntries([["merod",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>,), S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: Request&lt;Body&gt;,\n    _state: S,\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>,), S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Response&lt;Body&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: Request&lt;Body&gt;,\n    state: S,\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S&gt;&gt;&gt;::Service: Service&lt;Request&lt;Body&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3C(),+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithoutEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, Func&gt; HostFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithoutEnv&gt; for Func<div class=\"where\">where\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<(), (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithoutEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"impl\"><a href=\"#impl-HostFunction%3CT,+(A1,+A2,+A3,+A4,+A5,+A6,+A7,+A8,+A9,+A10,+A11,+A12,+A13,+A14,+A15,+A16,+A17,+A18,+A19,+A20,+A21,+A22,+A23,+A24,+A25,+A26),+Rets,+WithEnv%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, Rets, RetsAsResult, T, Func&gt; HostFunction&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26)</a>, Rets, WithEnv&gt; for Func<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    A1: FromToNativeWasmType,\n    A2: FromToNativeWasmType,\n    A3: FromToNativeWasmType,\n    A4: FromToNativeWasmType,\n    A5: FromToNativeWasmType,\n    A6: FromToNativeWasmType,\n    A7: FromToNativeWasmType,\n    A8: FromToNativeWasmType,\n    A9: FromToNativeWasmType,\n    A10: FromToNativeWasmType,\n    A11: FromToNativeWasmType,\n    A12: FromToNativeWasmType,\n    A13: FromToNativeWasmType,\n    A14: FromToNativeWasmType,\n    A15: FromToNativeWasmType,\n    A16: FromToNativeWasmType,\n    A17: FromToNativeWasmType,\n    A18: FromToNativeWasmType,\n    A19: FromToNativeWasmType,\n    A20: FromToNativeWasmType,\n    A21: FromToNativeWasmType,\n    A22: FromToNativeWasmType,\n    A23: FromToNativeWasmType,\n    A24: FromToNativeWasmType,\n    A25: FromToNativeWasmType,\n    A26: FromToNativeWasmType,\n    Rets: WasmTypeList,\n    RetsAsResult: IntoResult&lt;Rets&gt;,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(FunctionEnvMut&lt;'_, T&gt;, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26) -&gt; RetsAsResult + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.function_callback\" class=\"method trait-impl\"><a href=\"#method.function_callback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">function_callback</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody</h4></section></summary><div class='docblock'>Get the pointer to the function body.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call_trampoline_address\" class=\"method trait-impl\"><a href=\"#method.call_trampoline_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call_trampoline_address</a>() -&gt; unsafe extern &quot;C&quot; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.fn.html\">fn</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>VMContext, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*const </a>VMFunctionBody, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.pointer.html\">*mut </a>RawValue)</h4></section></summary><div class='docblock'>Get the pointer to the function call trampoline.</div></details></div></details>","HostFunction<T, (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26), Rets, WithEnv>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","merod::cli::relay::RequestPayload"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;,), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>,), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(Caller%3C'_,+T%3E,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R&gt; IntoFunc&lt;T, (Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Caller&lt;'_, T&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    T16: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (Caller<'_, T>, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1,)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1,), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), R>","merod::cli::relay::RequestPayload"],["<section id=\"impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"impl\"><a href=\"#impl-IntoFunc%3CT,+(T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+R%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, R&gt; IntoFunc&lt;T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.tuple.html\">(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, R&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; R + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    T1: WasmType,\n    T2: WasmType,\n    T3: WasmType,\n    T4: WasmType,\n    T5: WasmType,\n    T6: WasmType,\n    T7: WasmType,\n    T8: WasmType,\n    T9: WasmType,\n    T10: WasmType,\n    T11: WasmType,\n    T12: WasmType,\n    T13: WasmType,\n    T14: WasmType,\n    T15: WasmType,\n    T16: WasmType,\n    R: WasmRet,</div></h3></section>","IntoFunc<T, (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), R>","merod::cli::relay::RequestPayload"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[392969]}